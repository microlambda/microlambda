"use strict";(self.webpackChunkmila_docs=self.webpackChunkmila_docs||[]).push([[121],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=m(n),d=o,v=u["".concat(s,".").concat(d)]||u[d]||c[d]||a;return n?r.createElement(v,i(i({ref:t},p),{},{components:n})):r.createElement(v,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var m=2;m<a;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3603:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1},i="Manage environments",l={unversionedId:"deployments/manage-environments",id:"deployments/manage-environments",title:"Manage environments",description:"Remote state",source:"@site/docs/2-deployments/2-manage-environments.md",sourceDirName:"2-deployments",slug:"/deployments/manage-environments",permalink:"/docs/deployments/manage-environments",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Your first deploy",permalink:"/docs/deployments/your-first-deploy"},next:{title:"Using custom domains",permalink:"/docs/deployments/using-custom-domains"}},s={},m=[{value:"Remote state",id:"remote-state",level:2},{value:"Create environment",id:"create-environment",level:2},{value:"List environments",id:"list-environments",level:2},{value:"Destroy environments",id:"destroy-environments",level:2}],p={toc:m};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"manage-environments"},"Manage environments"),(0,o.kt)("h2",{id:"remote-state"},"Remote state"),(0,o.kt)("p",null,"Microlambda uses a remote state to keep track of every deployment."),(0,o.kt)("p",null,"The state consist of:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A DynamoDB table to store currently deployed services state and handle concurrent deployment."),(0,o.kt)("li",{parentName:"ul"},"A S3 bucket for remote caching, where checksums are stored to avoid re-deploying unaffected services.")),(0,o.kt)("p",null,"You must initialize this remote state once before your first deployment using ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn mila init")),(0,o.kt)("h2",{id:"create-environment"},"Create environment"),(0,o.kt)("p",null,"You must register on remote state the different environments of your application (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"dev"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"preprod"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"prod"),") ."),(0,o.kt)("p",null,"This is mandatory to keep track of deployments history and to manage ",(0,o.kt)("a",{parentName:"p",href:"../advanced/infrastructure-replication"},"infrastructure replication"),"."),(0,o.kt)("p",null,"A dedicated command is available to create a new environment in remote state."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"> yarn mila envs create dev\n")),(0,o.kt)("h2",{id:"list-environments"},"List environments"),(0,o.kt)("p",null,"You can list deployed environments using"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"> yarn mila envs create list\n")),(0,o.kt)("p",null,"This will give you the list of every live environment you registered and for each environment the target regions where the infrastructure is replicated."),(0,o.kt)("h2",{id:"destroy-environments"},"Destroy environments"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Be careful"),": every service in every region will be destroyed (you will be prompt for confirmation before)")),(0,o.kt)("p",null,"To destroy an existing environment use the command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"> yarn mila envs destroy dev\n")))}c.isMDXComponent=!0}}]);