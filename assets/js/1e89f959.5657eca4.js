"use strict";(self.webpackChunkmila_docs=self.webpackChunkmila_docs||[]).push([[696],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),m=o,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},1676:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:4},i="Using layers",s={unversionedId:"deployments/using-layers",id:"deployments/using-layers",title:"Using layers",description:"AWS Lambda requires uploading your zipped code to S3 to execute the handlers. This bundle must include the business code",source:"@site/docs/2-deployments/4-using-layers.md",sourceDirName:"2-deployments",slug:"/deployments/using-layers",permalink:"/docs/deployments/using-layers",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Using custom domains",permalink:"/docs/deployments/using-custom-domains"},next:{title:"Advanced concepts",permalink:"/docs/category/advanced-concepts"}},l={},c=[],u={toc:c};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-layers"},"Using layers"),(0,o.kt)("p",null,"AWS Lambda requires uploading your zipped code to S3 to execute the handlers. This bundle must include the business code\nas well as all dependencies used during the handler's execution."),(0,o.kt)("p",null,"Microlambda ships with its own algorithm for creating the bundle. This algorithm is optimized to generate a minimal-sized\nbundle containing all dependencies, both internal and external, in a monorepo context."),(0,o.kt)("p",null,"While this package is optimized, it often exceeds the 3MB limit for in-console AWS editing, which is very useful for\ndebugging purposes."),(0,o.kt)("p",null,"Furthermore, the overwhelming majority of the bundle's volume is occupied by dependencies. Therefore, recreating this\nbundle for each deployment can be costly."),(0,o.kt)("p",null,"Microlambda offers an option to enable the use of Lambda Layers. If this option is activated, the dependencies are zipped\nseparately and uploaded as a layer for the function. As a result, the actual code of the Lambda is often reduced by a few\nkilobytes, allowing for editing in the console."),(0,o.kt)("p",null,"Moreover, it is possible not to regenerate the layer part if the dependency tree remains unchanged between two deployments,\nwhich can save a considerable amount of time."),(0,o.kt)("p",null,"You can enable layers usage and layers caching in the serverless-microlambda plugin configuration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"custom:\n    packagr:\n      useLayer: true # Enable layers, default: false\n      checksums: true # Use layers caching, default: true\n      # Additional optional configuration\n      runtimes: # compatible runtimes, default: [provider.runtime]\n        - nodejs16.x\n        - nodejs14.x\n      architecture: arm64 # compatible architecture for layer, default: x86_64\n      level: 7 # compression level for zip, default: 9\n      prune: 3 # number of layer versions to keep, default: Infinity\n")))}d.isMDXComponent=!0}}]);